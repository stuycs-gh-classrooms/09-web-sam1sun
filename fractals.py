import turtle
import random
t=turtle.Turtle()
turtle.colormode(255)
def draw_koch(t,depth,length):
    d=depth-1
    l=length
    if depth==1:
        t.pencolor(52,52+random.randrange(183), 235)
        t.fd(length)
        t.width(2+random.randrange(1))
    else:
        draw_koch(t,d,l)
        t.lt(60)
        draw_koch(t,d,l)
        t.rt(120)
        draw_koch(t,d,l)
        t.lt(60)
        draw_koch(t,d,l)
def draw_koch_fancy(t,depth,length):
    i=0
    while i<6:
        draw_koch(t,depth, length)
        t.lt(60)
        i+=1
    t.pu()
    t.fd(length*(3**(depth-1)))
    t.lt(150)
    t.pd()
    j=0
    while j<3:
        draw_koch(t,depth+1,(length*(1/3)*(3**(1/2))))
        t.rt(120)
        j+=1
    t.rt(30)
def triangle(t, size):
    t.lt(60)
    t.fd(size)
    t.rt(120)
    t.fd(size)
    t.rt(120)
    t.fd(size)
    t.rt(180)
def draw_sierpinski_fancy(t, depth, length):
    t.pencolor("red")
    if depth==1:
        triangle(t,length)
    else:
        draw_sierpinski_fancy(t, depth-1, length/2)
        t.pu()
        t.lt(60)
        t.fd(length/2)
        t.rt(60)
        t.pd()
        draw_sierpinski_fancy(t, depth-1, length/2)
        t.pu()
        t.rt(60)
        t.fd(length/2)
        t.lt(60)
        t.pd()
        draw_sierpinski_fancy(t, depth-1, length/2)
        t.pu()
        t.lt(120)
        t.fd(length/4)
        t.rt(120)
        draw_sierpinski_fancy(t, depth-1, length/4)
        #t.lt(180)
        #t.fd(length/2)
        #t.rt(180)
def tree_fancy(t, depth, length, angle, width, min_back):
    t.width(width)
    if depth==1:
        t.pencolor("blue")
        t.fd(length)
        t.pu()
        t.bk(length)
        t.pd()
    else:
        t.pencolor("pink")
        t.fd(length)
        a=angle+random.randrange(-10,10)
        b=angle+random.randrange(-10,10)
        t.rt(a)
        tree_fancy(t, depth-1, length*(0.5+(random.randrange(20)/100)), angle, width-1, min_back)
        t.lt((a+b))
        tree_fancy(t, depth-1, length*(0.5+(random.randrange(20)/100)), angle, width-1, min_back)
        t.rt(b)
        t.pu()
        t.bk(length)
        t.pencolor("pink")
        t.pd()
        if depth>=min_back:
            t.rt(180)
            t.width(width)
            t.fd(length)
            t.rt(a)
            tree_fancy(t, depth-1, length*(0.5+(random.randrange(20)/100)), angle, width-1, min_back)
            t.lt((a+b))
            tree_fancy(t, depth-1, length*(0.5+(random.randrange(20)/100)), angle, width-1, min_back)
            t.rt(b)
            t.pu()
            t.bk(length)
            t.pd()
            t.rt(180)
t.speed(0)
t.pu()
t.setx(-500)
t.sety(-300)
t.pd()
draw_koch_fancy(t,2,15)
t.pu()
t.setx(100)
t.sety(-100)
t.pd()
draw_sierpinski_fancy(t, 3, 128)
t.pu()
t.sety(00)
t.setx(0)
t.pd()
t.speed(0)
t.rt(30)
tree_fancy(t, 3, 150, 40, 7, 7)
window=turtle.Screen()
window.exitonclick()

